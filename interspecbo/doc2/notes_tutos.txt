From : https://stackoverflow.com/questions/6358030/how-to-reset-django-admin-password

Created super user :
@rdanf1 ➜ /workspaces/interspec-bo (tutos-django) 

$ python manage.py createsuperuser

Username (leave blank to use 'codespace'): rdanf1
Email address: reylet.daniel@gmail.com
Password: 
Password (again): 
Superuser created successfully.


as a result in python console "$ python manage.py shell"
listing of superusers :
(venv3.10.4) @rdanf1 ➜ /workspaces/interspec-bo (tutos-django) 

$ python manage.py shell

Python 3.10.4 (main, Mar 13 2023, 19:44:25) [GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from django.contrib.auth.models import User
>>> User.objects.filter(is_superuser=True)
<QuerySet []>
>>> from django.contrib.auth.models import User
>>> User.objects.filter(is_superuser=True)
<QuerySet [<User: rdanf1>]>
>>> 




tuto02 :
$ python manage.py sqlmigrate backoffice 0001
BEGIN;
--
-- Create model Book
--
CREATE TABLE "backoffice_book" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "title" varchar(250) NOT NULL);
COMMIT;

Run $ python manage.py makemigrations to create migrations for those changes
Run $ python manage.py migrate to apply those changes to the database.

in python term $ python manage.py shell
>>> Question.objects.all()
<QuerySet []>
>>> from django.utils import timezone
>>> q = Question(question_text="What's new, doctor ?!..", pub_date=timezone.now())
>>> q.save()
>>> q.id
1
>>> q.question_text
"What's new, doctor ?!.."
>>> Question.objects.all()
<QuerySet [<Question: Question object (1)>]>
>>> Question.objects.all()[0].question_text
"What's new, doctor ?!.."

# Check on postgre psql ;
# couteau suisse sous requettage direct postgre 
# $ sudo sudo postgresql -u postgre psql

$ sudo sudo -u postgres psql
psql (12.14 (Ubuntu 12.14-0ubuntu0.20.04.1))
Type "help" for help.
# LISTE DES DB sur postgresql :
postgres=# SELECT datname FROM pg_database
postgres-# WHERE datistemplate = false;
##########################
# CONNEXION A LA BDD OK: #
##########################
postgres=# \c db-interbo #
##########################
You are now connected to database "db-interbo" as user "postgres".

db-interbo=# select * from polls_question;
 id |      question_text      |           pub_date            
----+-------------------------+-------------------------------
  1 | What's new, doctor ?!.. | 2023-03-31 18:11:50.350317+00
(1 row)

#########################
# structure # \d <table>#
#########################
db-interbo=# \d polls_question

                                   Table "public.polls_question"
    Column     |           Type           | Collation | Nullable |             Default              
---------------+--------------------------+-----------+----------+----------------------------------
 id            | bigint                   |           | not null | generated by default as identity
 question_text | character varying(200)   |           | not null | 
 pub_date      | timestamp with time zone |           | not null | 
Indexes:
    "polls_question_pkey" PRIMARY KEY, btree (id)
Referenced by:
    TABLE "polls_choice" CONSTRAINT "polls_choice_question_id_c5b4b260_fk_polls_question_id" 
    FOREIGN KEY (question_id) REFERENCES polls_question(id) 
    DEFERRABLE INITIALLY DEFERRED